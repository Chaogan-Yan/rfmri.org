<?php

/**
 * Implementation of hook_notifications()
 */
function notifications_ml_Comment_YAN_notifications($op) {
  switch ($op) {
    case 'message templates':
      // Single node templates
      $types['notifications_content-node-insert-ML_Comment_YAN'] = array(
        'object' => 'node',
        'title' => t('Node Post ML_Comment_YAN'),
        'class' => 'Notifications_Node_Insert_ML_Comment_YAN_Template',
      );
      return $types;
  }
}

/**
 * Template for node inserts
 */
class Notifications_Node_Insert_ML_Comment_YAN_Template extends Notifications_Node_Insert_Template {
  public function get_title() {
    return t('Mailing list template for comment');
  }

  /**
   * Default texts for this template, may need token replacement
   */
  function default_text($type, $options) {
    switch ($type) {
      case 'subject':
        return array(
          '#tokens' => TRUE,
          '#markup' => t('[RFMRI] [node:title]', array(), $options),
        );
      case 'content':
        return array(
          '#type' => 'messaging_template_text', '#tokens' => TRUE,
          'header' => t('Commented by [comment:author:profile-Username] ([comment:author:name])', array(), $options),
          /**'header' => '',**/
          'teaser' => '[comment:body]',
          'more' => array(
            '#type' => 'messaging_link',
            '#text' => t('Online version of this post:', array(), $options),
            '#url' => '[comment:url]',
          ),
        );
      case 'header':
        return array(
          '#markup' => '',
        );
      default:
        return parent::default_text($type, $options);
    }
  }
}
